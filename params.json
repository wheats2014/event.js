{"name":"Event.js","tagline":"translate any object to EventEmitter in browser","body":"event.js V0.0.5\r\n===\r\n\r\na async & UI-non-blocking event-customable frontend library\r\n\r\nit can create JavaScript Obejcts obtain HTMLElement's feature---Event Driven\r\n\r\nall the events' workflow is providen by DOM Event Model\r\n\r\n##### Notice!\r\n\r\nThis module is only available in web browser!\r\n\r\n##### install:\r\n\r\n```shell\r\nnpm install event.js\r\n```\r\n\r\n##### example:\r\n\r\n```js\r\n\r\n  var spore = new EventEmitter();\r\n\r\n  spore.on('growup', function (data) {\r\n    console.log(data);\r\n  });\r\n\r\n  spore.on('die', function (data) {\r\n    // ...\r\n  });\r\n\r\n  spore.emit('born', { size: 0.05, color: blue });\r\n\r\n```\r\n\r\n##### other usages && options:\r\n\r\n```js\r\n\r\n  EventEmitter(options)\r\n\r\n  the options is an object, all the events follow this setting:\r\n  {\r\n    MAXListener: <Number>,\r\n    bubbles: <Boolean>,\r\n    cancelable: <Boolean>\r\n  }\r\n\r\n  method:\r\n    .emit()\r\n    .on()\r\n    .onOnce()\r\n    .removeListener()\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}